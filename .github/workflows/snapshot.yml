# .github/workflows/snapshot.yml
name: ðŸ“¦ Snapshot Builds

on:
  push:
    branches:
      - 'feature/**'

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN:  ${{ secrets.DOCKERHUB_TOKEN }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      # 1) checkout + cache
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 21
          cache: maven

      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      # 2) estrazione versioni da pom.xml e package.json
      - name: Extract versions
        id: extract
        run: |
          BACKEND_VER=$(xmllint --xpath "string(//project/version)" pom.xml)
          FRONTEND_VER=$(jq -r .version frontend/package.json)
          echo "::set-output name=backend::$BACKEND_VER"
          echo "::set-output name=frontend::$FRONTEND_VER"

      # 3) test
      - name: Run backend tests
        run: mvn test --batch-mode

      - name: Run frontend tests
        run: |
          cd frontend
          npm ci
          npm test

      # 4) login Docker
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      # 5) build & push immagini
      - name: Build & push backend image
        run: |
          TS=$(date +%Y%m%d%H%M%S)
          TAG=${{ steps.extract.outputs.backend }}-snapshot-${TS}
          docker build -f Dockerfile -t ${{ env.DOCKERHUB_USERNAME }}/backend:$TAG .
          docker push ${{ env.DOCKERHUB_USERNAME }}/backend:$TAG

      - name: Build & push frontend image
        run: |
          TS=$(date +%Y%m%d%H%M%S)
          TAG=${{ steps.extract.outputs.frontend }}-snapshot-${TS}
          docker build -f frontend/Dockerfile -t ${{ env.DOCKERHUB_USERNAME }}/frontend:$TAG frontend
          docker push ${{ env.DOCKERHUB_USERNAME }}/frontend:$TAG
