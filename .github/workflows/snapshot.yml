# .github/workflows/feature-snapshot.yml
name: 📦 Feature Snapshot Build

# 1) Trigger su ogni push in feature/**
on:
  push:
    branches:
      - "feature/**"

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    # 2) Matrix per backend e frontend
    strategy:
      matrix:
        service: [backend, frontend]
      fail-fast: true

    steps:
      # 3) Checkout
      - name: Checkout repository
        uses: actions/checkout@v3

      # 4) Verifica che il folder e il Dockerfile esistano
      - name: Verify ${{ matrix.service }} directory
        run: |
          if [[ ! -d "${{ matrix.service }}" ]]; then
            echo "❌ Directory '${{ matrix.service }}' non trovata"
            exit 1
          fi
          if [[ ! -f "${{ matrix.service }}/Dockerfile" ]]; then
            echo "❌ ${{ matrix.service }}/Dockerfile mancante"
            exit 1
          fi

      # 5) Setup toolchain specifica
      - name: Setup Java (backend only)
        if: matrix.service == 'backend'
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "21"
          cache: maven

      - name: Setup Node.js (frontend only)
        if: matrix.service == 'frontend'
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      # 6) Estrai versione
      - name: Extract version for ${{ matrix.service }}
        id: extract
        shell: bash
        run: |
          if [[ "${{ matrix.service }}" == "backend" ]]; then
            VER=$(mvn -q -f backend/pom.xml \
              help:evaluate -Dexpression=project.version -DforceStdout)
          else
            VER=$(grep -m1 '"version"' frontend/package.json \
              | sed -E 's/.*"version"[[:space:]]*:[[:space:]]*"(.*)".*/\1/')
          fi
          echo "version=$VER" >> $GITHUB_OUTPUT
          # short SHA
          echo "sha=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      # 7) Test
      - name: Run tests for ${{ matrix.service }}
        run: |
          if [[ "${{ matrix.service }}" == "backend" ]]; then
            mvn -f backend/pom.xml test --batch-mode
          else
            cd frontend
            npm ci
            npm test
          fi

      # 8) Package (backend only – frontend non richiede package separato)
      - name: Package backend
        if: matrix.service == 'backend'
        run: mvn -f backend/pom.xml clean package -DskipTests

      # 9) Login Docker
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

        # 10) Build & push
      - name: Build & push ${{ matrix.service }} image
        run: |
          SERVICE=${{ matrix.service }}
          REPO=${{ env.DOCKERHUB_USERNAME }}/mangolab-$SERVICE
          V=${{ steps.extract.outputs.version }}
          S=${{ steps.extract.outputs.sha }}
    
          # tag snapshot immutabile
          SNAP_TAG=${V%-SNAPSHOT}-SNAPSHOT-${S}
    
          # 1) build e tagga l’immagine
          docker build \
            -f $SERVICE/Dockerfile \
            --build-arg NG_BUILD_CONFIG=development \
            --build-arg VERSION=$SNAP_TAG \
            -t $REPO:$SNAP_TAG \
            $SERVICE
    
          # 2) push del tag specifico
          docker push $REPO:$SNAP_TAG
    
          # 3) alias latest-snapshot
          docker tag $REPO:$SNAP_TAG $REPO:latest-snapshot
          docker push $REPO:latest-snapshot

