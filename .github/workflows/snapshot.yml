# .github/workflows/snapshot.yml
name: ðŸ“¦ Dynamic Snapshot Builds

on:
  push:
    branches:
      - 'feature/**'

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN:  ${{ secrets.DOCKERHUB_TOKEN }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    # 1) Checkout
    - name: Checkout repository
      uses: actions/checkout@v3

    # 2) Setup Java + cache Maven
    - name: Setup Java 21
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '21'
        cache: maven

    # 3) Detect backend/frontend & extract versions
    - name: Detect backend/frontend & extract versions
      id: detect
      run: |
        # â€” Backend â€”
        if [[ -f backend/pom.xml && -f backend/Dockerfile ]]; then
          echo "backend_exists=true" >> $GITHUB_OUTPUT
          # estrae project.version via Maven
          BVER=$(mvn -q -f backend/pom.xml \
            help:evaluate -Dexpression=project.version \
            -DforceStdout)
          echo "backend_version=$BVER" >> $GITHUB_OUTPUT
        else
          echo "backend_exists=false" >> $GITHUB_OUTPUT
        fi

        # â€” Frontend â€”
        if [[ -f frontend/package.json && -f frontend/Dockerfile ]]; then
          echo "frontend_exists=true" >> $GITHUB_OUTPUT
          # estrae "version" da package.json con grep|sed
          FVER=$(grep -m1 '"version"' frontend/package.json \
            | sed -E 's/.*"version"[[:space:]]*:[[:space:]]*"(.*)".*/\1/')
          echo "frontend_version=$FVER" >> $GITHUB_OUTPUT
        else
          echo "frontend_exists=false" >> $GITHUB_OUTPUT
        fi

    # 4) Run backend tests
    - name: Run backend tests
      if: ${{ steps.detect.outputs.backend_exists == 'true' }}
      run: mvn -f backend/pom.xml test --batch-mode

    # 5) Package backend
    - name: Package backend
      if: ${{ steps.detect.outputs.backend_exists == 'true' }}
      run: mvn -f backend/pom.xml clean package -DskipTests

    # 6) Run frontend tests
    - name: Run frontend tests
      if: ${{ steps.detect.outputs.frontend_exists == 'true' }}
      run: |
        cd frontend
        npm ci
        npm test

    # 7) Login to Docker Hub
    - name: Login to Docker Hub
      if: ${{ steps.detect.outputs.backend_exists == 'true' || steps.detect.outputs.frontend_exists == 'true' }}
      uses: docker/login-action@v2
      with:
        username: ${{ env.DOCKERHUB_USERNAME }}
        password: ${{ env.DOCKERHUB_TOKEN }}

    # 8) Build & push backend image
    - name: Build & push backend image
      if: ${{ steps.detect.outputs.backend_exists == 'true' }}
      run: |
        TS=$(date +%Y%m%d%H%M%S)
        TAG=${{ steps.detect.outputs.backend_version }}-snapshot-${TS}
        docker build \
          -f backend/Dockerfile \
          -t ${{ env.DOCKERHUB_USERNAME }}/backend:$TAG \
          backend
        docker push ${{ env.DOCKERHUB_USERNAME }}/backend:$TAG

    # 9) Build & push frontend image
    - name: Build & push frontend image
      if: ${{ steps.detect.outputs.frontend_exists == 'true' }}
      run: |
        TS=$(date +%Y%m%d%H%M%S)
        TAG=${{ steps.detect.outputs.frontend_version }}-snapshot-${TS}
        docker build \
          -f frontend/Dockerfile \
          -t ${{ env.DOCKERHUB_USERNAME }}/frontend:$TAG \
          frontend
        docker push ${{ env.DOCKERHUB_USERNAME }}/frontend:$TAG
