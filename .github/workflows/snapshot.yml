name: ðŸ“¦ Snapshot Builds

on:
  push:
    branches:
      - 'feature/**'

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN:  ${{ secrets.DOCKERHUB_TOKEN }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # 1) Checkout del codice
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2) Setup Java + cache Maven
      - name: Setup Java 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: maven

      # 3) Setup Node + cache NPM
      - name: Setup Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      # 4) Estrazione versioni da pom.xml e package.json
      - name: Extract versions
        id: extract
        run: |
          # backend: legge <version> da pom.xml
          BACKEND_VER=$(xmllint --xpath "string(//project/version)" pom.xml)
          # frontend: legge "version" da package.json
          FRONTEND_VER=$(jq -r .version frontend/package.json)
          echo "backend=$BACKEND_VER"  >> $GITHUB_OUTPUT
          echo "frontend=$FRONTEND_VER" >> $GITHUB_OUTPUT

      # 5) Esecuzione test backend
      - name: Run backend tests
        run: mvn test --batch-mode

      # 6) Esecuzione test frontend
      - name: Run frontend tests
        run: |
          cd frontend
          npm ci
          npm test

      # 7) Login a Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      # 8) Build & push immagine backend
      - name: Build & push backend image
        run: |
          TS=$(date +%Y%m%d%H%M%S)
          TAG=${{ steps.extract.outputs.backend }}-snapshot-${TS}
          docker build -f Dockerfile -t ${{ env.DOCKERHUB_USERNAME }}/backend:$TAG .
          docker push ${{ env.DOCKERHUB_USERNAME }}/backend:$TAG

      # 9) Build & push immagine frontend
      - name: Build & push frontend image
        run: |
          TS=$(date +%Y%m%d%H%M%S)
          TAG=${{ steps.extract.outputs.frontend }}-snapshot-${TS}
          docker build -f frontend/Dockerfile -t ${{ env.DOCKERHUB_USERNAME }}/frontend:$TAG frontend
          docker push ${{ env.DOCKERHUB_USERNAME }}/frontend:$TAG
