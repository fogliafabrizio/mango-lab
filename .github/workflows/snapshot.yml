# .github/workflows/snapshot.yml
name: ðŸ“¦ Dynamic Snapshot Builds

on:
  push:
    branches:
      - 'feature/**'

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN:  ${{ secrets.DOCKERHUB_TOKEN }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup Java 21
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '21'
        cache: maven

    - name: Detect backend/frontend & extract versions
      id: detect
      run: |
        # Backend
        if [[ -f backend/pom.xml && -f backend/Dockerfile ]]; then
          echo "backend_exists=true" >> $GITHUB_OUTPUT
          BVER=$(mvn -q -f backend/pom.xml \
            help:evaluate -Dexpression=project.version \
            -DforceStdout)
          echo "backend_version=$BVER" >> $GITHUB_OUTPUT
        else
          echo "backend_exists=false" >> $GITHUB_OUTPUT
        fi

        # Frontend
        if [[ -f frontend/package.json && -f frontend/Dockerfile ]]; then
          echo "frontend_exists=true" >> $GITHUB_OUTPUT
          FVER=$(grep -m1 '"version"' frontend/package.json \
            | sed -E 's/.*"version"[[:space:]]*:[[:space:]]*"(.*)".*/\1/')
          echo "frontend_version=$FVER" >> $GITHUB_OUTPUT
        else
          echo "frontend_exists=false" >> $GITHUB_OUTPUT
        fi

    - name: Run backend tests
      if: ${{ steps.detect.outputs.backend_exists == 'true' }}
      run: mvn -f backend/pom.xml test --batch-mode

    - name: Package backend
      if: ${{ steps.detect.outputs.backend_exists == 'true' }}
      run: mvn -f backend/pom.xml clean package -DskipTests

    - name: Run frontend tests
      if: ${{ steps.detect.outputs.frontend_exists == 'true' }}
      run: |
        cd frontend
        npm ci
        npm test

    - name: Login to Docker Hub
      if: ${{ steps.detect.outputs.backend_exists == 'true' || steps.detect.outputs.frontend_exists == 'true' }}
      uses: docker/login-action@v2
      with:
        username: ${{ env.DOCKERHUB_USERNAME }}
        password: ${{ env.DOCKERHUB_TOKEN }}

    # ------------------
    # Build & Push Backend
    # ------------------

    - name: Build & push backend image
      if: ${{ steps.detect.outputs.backend_exists == 'true' }}
      run: |
        REPO=${{ env.DOCKERHUB_USERNAME }}/mangolab-backend
        V=${{ steps.detect.outputs.backend_version }}
        # Prendiamo i primi 7 caratteri del commit SHA
        SHA_SHORT=${GITHUB_SHA::7}

        # 1) Tag snapshot su SHA
        TAG=${V%-SNAPSHOT}-SNAPSHOT-${SHA_SHORT}

        docker build -f backend/Dockerfile -t $REPO:$TAG backend
        docker push  $REPO:$TAG

        # 2) aggiorniamo sempre lâ€™alias "latest-snapshot"
        docker tag  $REPO:$TAG $REPO:latest-snapshot
        docker push $REPO:latest-snapshot

    # ------------------
    # Build & Push Frontend
    # ------------------

    - name: Build & push frontend image
      if: ${{ steps.detect.outputs.frontend_exists == 'true' }}
      run: |
        REPO=${{ env.DOCKERHUB_USERNAME }}/mangolab-frontend
        V=${{ steps.detect.outputs.frontend_version }}
        SHA_SHORT=${GITHUB_SHA::7}

        TAG=${V%-SNAPSHOT}-SNAPSHOT-${SHA_SHORT}

        docker build -f frontend/Dockerfile -t $REPO:$TAG frontend
        docker push  $REPO:$TAG

        docker tag  $REPO:$TAG $REPO:latest-snapshot
        docker push $REPO:latest-snapshot